name: Build & Release Python Wheels (Selected Platforms)

on:
  push:

permissions:
  id-token: write
  contents: read
  attestations: write

jobs:
  # linux-x64:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.x
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         working-directory: bindings/python
  #         target: x86_64
  #         args: --release --strip --out dist
  #         sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #         manylinux: auto
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-linux-x86_64
  #         path: bindings/python/dist

  windows-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true
          cache: true
          target: x86_64-pc-windows-msvc
          rustflags: ""
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: x64

      - name: Generate stubs
        run: |
          cargo run --bin stub_gen
        working-directory: bindings/python

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: bindings/python
          target: x64
          args: --release --strip --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-x64
          path: bindings/python/dist

  # macos-x64:
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Rust
  #       uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true
  #         cache: true
  #         target: x86_64-apple-darwin
  #         rustflags: ""
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.x
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         working-directory: bindings/python
  #         target: x86_64
  #         args: --release --strip --out dist
  #         sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-macos-x86_64
  #         path: bindings/python/dist

  # macos-arm64:
  #   runs-on: macos-14
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Rust
  #       uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true
  #         cache: true
  #         target: aarch64-apple-darwin
  #         rustflags: ""
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.x
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         working-directory: bindings/python
  #         target: aarch64
  #         args: --release --strip --out dist
  #         sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-macos-arm64
  #         path: bindings/python/dist
  #
  # TODO: Uncomment the above macOS jobs when macOS support is ready.

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          working-directory: bindings/python
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: bindings/python/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [windows-x64]
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: bindings/python/

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'bindings/python/wheels-*/*.whl'

      - name: setup tmate
        uses: mxschmitt/action-tmate@v3

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          working-directory: bindings/python
          command: upload
          args: --non-interactive --skip-existing dist/*